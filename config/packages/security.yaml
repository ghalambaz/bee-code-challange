security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users_in_database:
      entity:
        class: 'App\Entity\User'
        property: 'username'
  firewalls:
    api:
      pattern: ^/api/
      anonymous: true
      stateless: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true
      lazy: true
      provider: users_in_database

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true
    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure


  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: /api/records , roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ GET ] }
    - { path: /api/index,   roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ GET ] }
    - { path: /api/login,   roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ POST ] }
    - { path: ^/api,         roles: IS_AUTHENTICATED_FULLY }

